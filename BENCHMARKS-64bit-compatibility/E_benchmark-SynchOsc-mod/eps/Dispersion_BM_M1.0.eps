%!PS-Adobe-2.0 EPSF-2.0
%%Title: Dispersion_BM_M1.0.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri May 30 15:08:47 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Dispersion_BM_M1.0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (UAL User in 2011)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 15:08:47 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1700 840 M
5200 0 V
stroke
LTb
1700 840 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 840 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.00015)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 1500 M
5200 0 V
stroke
LTb
1700 1500 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 1500 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.0001)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 2160 M
5200 0 V
stroke
LTb
1700 2160 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 2160 M
[ [(Helvetica) 200.0 0.0 true true 0 (-5e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 2820 M
5200 0 V
stroke
LTb
1700 2820 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 2820 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 3480 M
5200 0 V
stroke
LTb
1700 3480 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 3480 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 4140 M
120 0 V
4383 0 R
697 0 V
stroke
LTb
1700 4140 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 4140 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.0001)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 4800 M
5200 0 V
stroke
LTb
1700 4800 M
63 0 V
5137 0 R
-63 0 V
stroke
1580 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.00015)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 840 M
0 3960 V
stroke
LTb
1700 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1700 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2567 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
2567 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2567 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3433 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
3433 840 M
0 63 V
0 3897 R
0 -63 V
stroke
3433 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4300 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
4300 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4300 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5167 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
5167 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5167 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6033 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
6033 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6033 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6900 840 M
0 3960 V
stroke
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1700 4800 N
0 -3960 V
5200 0 V
0 3960 V
-5200 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (x [m])]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4300 340 M
[ [(Symbol) 200.0 0.0 true true 0 (d)]
[(Helvetica) 160.0 -60.0 true true 0 (U)]
[(Helvetica) 160.0 -60.0 true true 0 (A)]
[(Helvetica) 160.0 -60.0 true true 0 (L)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 200 scalefont setfont
LTb
5420 4637 M
('saveIG-BM_M1.0.RF' i 10 u 9:4) Rshow
LT0
2567 2820 Pls
2567 1060 Pls
2568 2722 Pls
2572 1257 Pls
2576 2450 Pls
2583 1608 Pls
2591 2066 Pls
2601 2036 Pls
2611 1657 Pls
2625 2448 Pls
2639 1318 Pls
2655 2754 Pls
2672 1127 Pls
2691 2890 Pls
2711 1131 Pls
2733 2830 Pls
2757 1333 Pls
2781 2591 Pls
2808 1695 Pls
2835 2233 Pls
2865 2141 Pls
2894 1842 Pls
2926 2578 Pls
2959 1512 Pls
2993 2916 Pls
3029 1324 Pls
3065 3087 Pls
3103 1329 Pls
3142 3060 Pls
3182 1534 Pls
3222 2851 Pls
3265 1902 Pls
3307 2515 Pls
3351 2360 Pls
3396 2137 Pls
3442 2817 Pls
3488 1813 Pls
3535 3180 Pls
3583 1624 Pls
3631 3378 Pls
3680 1623 Pls
3730 3379 Pls
3780 1823 Pls
3831 3194 Pls
3882 2190 Pls
3933 2874 Pls
3985 2653 Pls
4037 2504 Pls
4090 3121 Pls
4142 2178 Pls
4195 3501 Pls
4248 1980 Pls
4301 3719 Pls
4354 1967 Pls
4407 3741 Pls
4459 2154 Pls
4512 3571 Pls
4564 2510 Pls
4616 3261 Pls
4668 2969 Pls
4720 2891 Pls
4771 3439 Pls
4821 2555 Pls
4872 3826 Pls
4921 2341 Pls
4971 4056 Pls
5019 2307 Pls
5067 4089 Pls
5114 2472 Pls
5160 3928 Pls
5206 2809 Pls
5250 3619 Pls
5294 3253 Pls
5337 3241 Pls
5379 3716 Pls
5420 2890 Pls
5460 4103 Pls
5498 2652 Pls
5536 4336 Pls
5573 2589 Pls
5608 4373 Pls
5642 2724 Pls
5675 4212 Pls
5707 3034 Pls
5737 3898 Pls
5766 3457 Pls
5793 3508 Pls
5820 3905 Pls
5844 3134 Pls
5868 4283 Pls
5889 2867 Pls
5910 4514 Pls
5929 2770 Pls
5946 4548 Pls
5962 2870 Pls
5976 4384 Pls
5989 3147 Pls
6000 4061 Pls
6010 3543 Pls
6017 3654 Pls
6024 3971 Pls
6028 3255 Pls
6032 4337 Pls
6033 2955 Pls
6033 4560 Pls
6032 2821 Pls
6028 4590 Pls
6024 2883 Pls
6017 4420 Pls
6009 3125 Pls
5999 4087 Pls
5988 3492 Pls
5975 3662 Pls
5961 3898 Pls
5945 3238 Pls
5927 4251 Pls
5908 2906 Pls
5888 4467 Pls
5866 2736 Pls
5842 4493 Pls
5818 2760 Pls
5791 4318 Pls
5764 2968 Pls
5734 3976 Pls
5704 3307 Pls
5672 3537 Pls
5640 3694 Pls
5605 3091 Pls
5570 4035 Pls
5533 2730 Pls
5496 4246 Pls
5457 2527 Pls
5417 4272 Pls
5376 2518 Pls
5334 4097 Pls
5291 2696 Pls
5247 3752 Pls
5203 3011 Pls
5157 3303 Pls
5111 3383 Pls
5063 2841 Pls
5016 3718 Pls
4967 2458 Pls
4918 3931 Pls
4868 2229 Pls
4818 3962 Pls
4767 2193 Pls
4716 3794 Pls
4665 2347 Pls
4613 3453 Pls
4561 2645 Pls
4508 3003 Pls
4456 3009 Pls
4403 2532 Pls
4350 3345 Pls
4297 2135 Pls
4245 3567 Pls
4192 1887 Pls
4139 3612 Pls
4086 1833 Pls
4034 3459 Pls
3982 1971 Pls
3930 3131 Pls
3879 2261 Pls
3827 2688 Pls
3777 2625 Pls
3726 2218 Pls
3677 2970 Pls
3628 1815 Pls
3579 3209 Pls
3532 1557 Pls
3485 3277 Pls
3438 1492 Pls
3393 3147 Pls
3348 1624 Pls
3304 2840 Pls
3262 1913 Pls
3220 2412 Pls
3179 2284 Pls
3139 1952 Pls
3100 2647 Pls
3063 1551 Pls
3026 2910 Pls
2991 1292 Pls
2957 3007 Pls
2924 1224 Pls
2892 2909 Pls
2862 1355 Pls
2833 2629 Pls
2806 1649 Pls
2780 2225 Pls
2755 2035 Pls
2732 1780 Pls
2710 2420 Pls
2690 1388 Pls
2671 2713 Pls
2653 1133 Pls
2638 2845 Pls
2623 1068 Pls
2611 2783 Pls
2600 1203 Pls
2590 2537 Pls
2582 1507 Pls
2576 2160 Pls
2571 1910 Pls
2568 1735 Pls
2567 2320 Pls
2567 1356 Pls
2569 2646 Pls
2572 1108 Pls
2577 2816 Pls
2583 1047 Pls
2591 2792 Pls
2601 1188 Pls
2612 2581 Pls
2625 1503 Pls
2640 2233 Pls
2656 1923 Pls
2673 1830 Pls
2693 2358 Pls
2713 1464 Pls
2735 2717 Pls
2758 1223 Pls
2783 2922 Pls
2810 1165 Pls
2837 2935 Pls
2866 1310 Pls
2897 2758 Pls
2929 1632 Pls
2961 2438 Pls
2996 2067 Pls
3031 2054 Pls
3068 2524 Pls
3105 1699 Pls
3145 2910 Pls
3184 1461 Pls
3225 3147 Pls
3267 1403 Pls
3310 3193 Pls
3354 1547 Pls
3399 3045 Pls
3445 1872 Pls
3491 2748 Pls
3538 2313 Pls
3586 2378 Pls
3635 2785 Pls
3683 2028 Pls
3733 3192 Pls
3783 1789 Pls
3834 3455 Pls
3885 1724 Pls
3937 3526 Pls
3989 1860 Pls
4041 3401 Pls
4094 2178 Pls
4146 3120 Pls
4199 2620 Pls
4251 2757 Pls
4305 3097 Pls
4357 2406 Pls
4410 3517 Pls
4463 2157 Pls
4516 3796 Pls
4568 2078 Pls
4620 3884 Pls
4672 2197 Pls
4723 3774 Pls
4775 2501 Pls
4825 3501 Pls
4875 2932 Pls
4925 3139 Pls
4974 3406 Pls
5022 2779 Pls
5070 3829 Pls
5117 2512 Pls
5163 4115 Pls
5209 2410 Pls
5253 4212 Pls
5297 2505 Pls
5340 4109 Pls
5382 2785 Pls
5422 3838 Pls
5462 3197 Pls
5501 3468 Pls
5539 3659 Pls
5575 3092 Pls
5610 4076 Pls
5644 2802 Pls
5677 4362 Pls
5708 2670 Pls
5739 4461 Pls
5768 2732 Pls
5795 4358 Pls
5821 2982 Pls
5846 4082 Pls
5869 3369 Pls
5891 3700 Pls
5911 3811 Pls
5930 3303 Pls
5947 4216 Pls
5963 2984 Pls
5977 4496 Pls
5990 2818 Pls
6001 4591 Pls
6010 2843 Pls
6018 4484 Pls
6024 3058 Pls
6029 4200 Pls
6032 3414 Pls
6033 3804 Pls
6033 3834 Pls
6031 3384 Pls
6028 4223 Pls
6023 3034 Pls
6017 4493 Pls
6008 2831 Pls
5999 4584 Pls
5987 2819 Pls
5974 4472 Pls
5960 2997 Pls
5943 4179 Pls
5926 3322 Pls
5907 3768 Pls
5887 3718 Pls
5864 3326 Pls
5841 4091 Pls
5816 2947 Pls
5790 4353 Pls
5762 2710 Pls
5733 4440 Pls
5702 2661 Pls
5670 4325 Pls
5637 2804 Pls
5603 4027 Pls
5568 3101 Pls
5531 3605 Pls
5493 3475 Pls
5454 3145 Pls
5414 3836 Pls
5373 2741 Pls
5331 4094 Pls
5288 2474 Pls
5244 4181 Pls
5200 2393 Pls
5154 4069 Pls
5108 2507 Pls
5060 3771 Pls
5013 2780 Pls
4964 3344 Pls
4915 3139 Pls
4865 2873 Pls
4815 3494 Pls
4764 2451 Pls
4713 3753 Pls
4661 2161 Pls
4609 3848 Pls
4557 2056 Pls
4505 3745 Pls
4452 2148 Pls
4399 3456 Pls
4347 2405 Pls
4294 3033 Pls
4241 2756 Pls
4188 2558 Pls
4135 3112 Pls
4083 2127 Pls
4030 3381 Pls
3978 1822 Pls
3926 3492 Pls
3875 1702 Pls
3824 3407 Pls
3773 1780 Pls
3723 3134 Pls
3674 2028 Pls
3624 2723 Pls
3576 2379 Pls
3528 2255 Pls
3482 2745 Pls
3435 1822 Pls
3390 3032 Pls
3345 1512 Pls
3301 3166 Pls
3259 1384 Pls
3217 3108 Pls
3176 1456 Pls
3136 2860 Pls
3098 1704 Pls
3060 2470 Pls
3024 2063 Pls
2988 2015 Pls
2955 2445 Pls
2922 1589 Pls
2891 2756 Pls
2860 1281 Pls
2832 2921 Pls
2804 1152 Pls
2778 2896 Pls
2754 1225 Pls
2730 2680 Pls
2709 1478 Pls
2688 2316 Pls
2670 1849 Pls
2652 1882 Pls
2637 2253 Pls
2622 1469 Pls
2610 2594 Pls
2599 1167 Pls
2590 2794 Pls
2582 1042 Pls
2576 2806 Pls
2571 1119 Pls
2568 2626 Pls
2567 1380 Pls
2567 2293 Pls
2569 1767 Pls
2572 1881 Pls
2577 2194 Pls
2584 1484 Pls
2592 2566 Pls
2602 1191 Pls
2613 2803 Pls
2626 1071 Pls
2641 2853 Pls
2657 1153 Pls
2674 2709 Pls
2694 1422 Pls
2714 2407 Pls
2737 1823 Pls
2760 2019 Pls
2785 2272 Pls
2811 1637 Pls
2839 2673 Pls
2868 1352 Pls
2899 2944 Pls
2931 1235 Pls
2964 3030 Pls
2998 1319 Pls
3033 2920 Pls
3070 1593 Pls
3108 2646 Pls
3147 2004 Pls
3187 2279 Pls
3228 2470 Pls
3270 1908 Pls
3313 2895 Pls
3357 1627 Pls
3402 3194 Pls
3448 1509 Pls
3494 3311 Pls
3541 1589 Pls
3589 3229 Pls
3638 1861 Pls
3687 2979 Pls
3737 2276 Pls
3787 2626 Pls
3838 2751 Pls
3889 2261 Pls
3941 3192 Pls
3992 1978 Pls
4045 3513 Pls
4097 1851 Pls
4150 3652 Pls
4202 1920 Pls
4255 3592 Pls
4308 2182 Pls
4361 3357 Pls
4414 2591 Pls
4466 3012 Pls
4519 3067 Pls
4571 2646 Pls
4624 3515 Pls
4675 2352 Pls
4727 3848 Pls
4778 2209 Pls
4828 4002 Pls
4879 2259 Pls
4928 3954 Pls
4977 2502 Pls
5025 3727 Pls
5073 2896 Pls
5120 3382 Pls
5167 3363 Pls
5212 3008 Pls
5257 3809 Pls
5300 2696 Pls
5343 4145 Pls
5384 2529 Pls
5425 4305 Pls
5465 2551 Pls
5504 4263 Pls
5541 2768 Pls
5577 4036 Pls
5613 3138 Pls
5646 3685 Pls
5679 3588 Pls
5710 3295 Pls
5741 4024 Pls
5769 2960 Pls
5797 4355 Pls
5823 2762 Pls
5811 4637 Pls
1.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
LTb
5420 4437 M
(66.9*x) Rshow
LT1
5540 4437 M
543 0 V
2567 1937 M
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
36 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
35 18 V
35 18 V
35 18 V
35 17 V
35 18 V
35 18 V
1.000 UP
stroke
0.00 0.00 0.00 C /Helvetica findfont 200 scalefont setfont
LTb
5420 4237 M
("<echo '-0.000001 0.0'") Rshow
LT1
0.00 0.00 0.00 C 2567 2820 Circle
5811 4237 Circle
1.000 UL
LTb
1700 4800 N
0 -3960 V
5200 0 V
0 3960 V
-5200 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
