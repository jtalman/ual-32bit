%!PS-Adobe-2.0 EPSF-2.0
%%Title: Dispersion_BM_M1.0.2.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri May 30 15:16:15 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Dispersion_BM_M1.0.2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (UAL User in 2011)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 15:16:15 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1460 840 M
5440 0 V
stroke
LTb
1460 840 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 840 M
[ [(Helvetica) 200.0 0.0 true true 0 (-8e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 1335 M
5440 0 V
stroke
LTb
1460 1335 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 1335 M
[ [(Helvetica) 200.0 0.0 true true 0 (-6e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 1830 M
5440 0 V
stroke
LTb
1460 1830 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 1830 M
[ [(Helvetica) 200.0 0.0 true true 0 (-4e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 2325 M
5440 0 V
stroke
LTb
1460 2325 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 2325 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 2820 M
5440 0 V
stroke
LTb
1460 2820 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 2820 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 3315 M
5440 0 V
stroke
LTb
1460 3315 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 3315 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 3810 M
5440 0 V
stroke
LTb
1460 3810 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 3810 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 4305 M
120 0 V
4383 0 R
937 0 V
stroke
LTb
1460 4305 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 4305 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 4800 M
5440 0 V
stroke
LTb
1460 4800 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8e-05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 840 M
0 3960 V
stroke
LTb
1460 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1460 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2367 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
2367 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2367 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3273 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
3273 840 M
0 63 V
0 3897 R
0 -63 V
stroke
3273 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4180 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
4180 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4180 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5087 840 M
0 3297 V
0 600 R
0 63 V
stroke
LTb
5087 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5087 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5993 840 M
0 3960 V
stroke
LTb
5993 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5993 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6900 840 M
0 3960 V
stroke
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1460 4800 N
0 -3960 V
5440 0 V
0 3960 V
-5440 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (x [m])]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4180 340 M
[ [(Symbol) 200.0 0.0 true true 0 (d)]
[(Helvetica) 160.0 -60.0 true true 0 (U)]
[(Helvetica) 160.0 -60.0 true true 0 (A)]
[(Helvetica) 160.0 -60.0 true true 0 (L)]
] -46.7 MCshow
LTb
1.000 UP
1460 -455053 M
[ [(Helvetica) 200.0 0.0 true true 0 (xprime)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 (=-0.00055)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 200 scalefont setfont
LTb
5180 4637 M
('saveIG-BM_M1.0.RF' i 13 u 9:4) Rshow
LT0
2367 1164 Pls
2367 1129 Pls
2368 1165 Pls
2372 1139 Pls
2377 1169 Pls
2384 1159 Pls
2392 1177 Pls
2402 1186 Pls
2414 1190 Pls
2427 1219 Pls
2442 1210 Pls
2459 1255 Pls
2477 1240 Pls
2497 1294 Pls
2518 1279 Pls
2541 1335 Pls
2566 1327 Pls
2591 1377 Pls
2619 1385 Pls
2648 1423 Pls
2678 1449 Pls
2710 1473 Pls
2743 1519 Pls
2777 1529 Pls
2813 1591 Pls
2850 1593 Pls
2888 1664 Pls
2928 1665 Pls
2968 1737 Pls
3010 1745 Pls
3053 1811 Pls
3097 1833 Pls
3142 1886 Pls
3187 1926 Pls
3234 1964 Pls
3282 2022 Pls
3330 2046 Pls
3380 2119 Pls
3430 2134 Pls
3480 2216 Pls
3532 2227 Pls
3584 2311 Pls
3636 2327 Pls
3689 2404 Pls
3743 2432 Pls
3797 2496 Pls
3851 2541 Pls
3905 2588 Pls
3960 2650 Pls
4015 2682 Pls
4070 2759 Pls
4126 2779 Pls
4181 2864 Pls
4236 2879 Pls
4292 2966 Pls
4347 2984 Pls
4402 3063 Pls
4457 3091 Pls
4511 3156 Pls
4565 3199 Pls
4619 3247 Pls
4673 3307 Pls
4726 3337 Pls
4778 3410 Pls
4830 3427 Pls
4881 3509 Pls
4932 3519 Pls
4982 3601 Pls
5031 3612 Pls
5080 3686 Pls
5127 3706 Pls
5174 3765 Pls
5220 3799 Pls
5265 3839 Pls
5309 3888 Pls
5351 3910 Pls
5393 3972 Pls
5434 3979 Pls
5473 4049 Pls
5511 4048 Pls
5548 4117 Pls
5584 4116 Pls
5618 4177 Pls
5651 4182 Pls
5683 4228 Pls
5713 4246 Pls
5742 4273 Pls
5769 4305 Pls
5795 4313 Pls
5820 4357 Pls
5843 4349 Pls
5864 4401 Pls
5884 4383 Pls
5902 4435 Pls
5918 4415 Pls
5933 4459 Pls
5947 4445 Pls
5958 4474 Pls
5968 4472 Pls
5977 4481 Pls
5983 4492 Pls
5988 4482 Pls
5992 4506 Pls
5993 4479 Pls
5993 4510 Pls
5992 4473 Pls
5988 4505 Pls
5983 4465 Pls
5976 4489 Pls
5968 4454 Pls
5958 4464 Pls
5946 4440 Pls
5932 4430 Pls
5917 4421 Pls
5901 4391 Pls
5882 4395 Pls
5863 4348 Pls
5841 4360 Pls
5818 4303 Pls
5794 4316 Pls
5768 4256 Pls
5740 4262 Pls
5711 4207 Pls
5681 4199 Pls
5649 4156 Pls
5616 4130 Pls
5582 4101 Pls
5546 4056 Pls
5509 4041 Pls
5470 3978 Pls
5431 3973 Pls
5390 3900 Pls
5349 3897 Pls
5306 3822 Pls
5262 3813 Pls
5217 3743 Pls
5171 3723 Pls
5124 3664 Pls
5077 3626 Pls
5028 3583 Pls
4979 3527 Pls
4929 3499 Pls
4878 3427 Pls
4827 3409 Pls
4775 3327 Pls
4722 3314 Pls
4669 3229 Pls
4616 3213 Pls
4562 3134 Pls
4507 3107 Pls
4453 3040 Pls
4398 2998 Pls
4343 2947 Pls
4288 2887 Pls
4232 2853 Pls
4177 2778 Pls
4122 2757 Pls
4067 2672 Pls
4011 2657 Pls
3956 2571 Pls
3902 2554 Pls
3847 2474 Pls
3793 2448 Pls
3739 2382 Pls
3686 2342 Pls
3633 2292 Pls
3580 2236 Pls
3528 2204 Pls
3477 2134 Pls
3426 2117 Pls
3376 2038 Pls
3327 2028 Pls
3279 1948 Pls
3231 1939 Pls
3184 1866 Pls
3138 1849 Pls
3094 1790 Pls
3050 1760 Pls
3007 1719 Pls
2965 1675 Pls
2925 1652 Pls
2886 1595 Pls
2847 1588 Pls
2811 1522 Pls
2775 1525 Pls
2741 1458 Pls
2708 1463 Pls
2676 1403 Pls
2646 1402 Pls
2617 1356 Pls
2590 1344 Pls
2564 1317 Pls
2539 1290 Pls
2517 1283 Pls
2495 1244 Pls
2476 1253 Pls
2458 1205 Pls
2441 1226 Pls
2426 1177 Pls
2413 1200 Pls
2401 1158 Pls
2391 1177 Pls
2383 1149 Pls
2376 1157 Pls
2371 1149 Pls
2368 1143 Pls
2367 1154 Pls
2367 1135 Pls
2369 1164 Pls
2372 1137 Pls
2377 1177 Pls
2384 1148 Pls
2393 1192 Pls
2403 1169 Pls
2415 1209 Pls
2428 1200 Pls
2443 1230 Pls
2460 1239 Pls
2478 1255 Pls
2498 1285 Pls
2520 1287 Pls
2543 1334 Pls
2567 1327 Pls
2593 1386 Pls
2621 1376 Pls
2650 1439 Pls
2680 1434 Pls
2712 1493 Pls
2745 1501 Pls
2780 1550 Pls
2815 1576 Pls
2853 1610 Pls
2891 1655 Pls
2930 1675 Pls
2971 1737 Pls
3013 1746 Pls
3056 1820 Pls
3100 1825 Pls
3145 1903 Pls
3191 1912 Pls
3237 1986 Pls
3285 2006 Pls
3334 2068 Pls
3383 2105 Pls
3433 2152 Pls
3484 2207 Pls
3535 2239 Pls
3587 2310 Pls
3640 2330 Pls
3693 2412 Pls
3746 2426 Pls
3800 2512 Pls
3855 2528 Pls
3909 2609 Pls
3964 2635 Pls
4019 2704 Pls
4074 2744 Pls
4129 2798 Pls
4185 2855 Pls
4240 2892 Pls
4295 2965 Pls
4350 2987 Pls
4405 3071 Pls
4460 3086 Pls
4515 3172 Pls
4569 3187 Pls
4623 3268 Pls
4676 3291 Pls
4729 3359 Pls
4782 3395 Pls
4834 3447 Pls
4885 3499 Pls
4936 3532 Pls
4986 3599 Pls
5035 3616 Pls
5083 3693 Pls
5131 3701 Pls
5177 3780 Pls
5223 3786 Pls
5268 3860 Pls
5312 3872 Pls
5354 3932 Pls
5396 3956 Pls
5436 3998 Pls
5476 4038 Pls
5514 4060 Pls
5551 4113 Pls
5586 4119 Pls
5621 4182 Pls
5654 4177 Pls
5685 4241 Pls
5715 4233 Pls
5744 4292 Pls
5771 4288 Pls
5797 4333 Pls
5821 4340 Pls
5844 4367 Pls
5865 4388 Pls
5885 4395 Pls
5903 4429 Pls
5919 4418 Pls
5934 4462 Pls
5948 4439 Pls
5959 4485 Pls
5969 4458 Pls
5977 4498 Pls
5984 4474 Pls
5989 4501 Pls
5992 4487 Pls
5993 4496 Pls
5993 4495 Pls
5991 4484 Pls
5988 4497 Pls
5983 4467 Pls
5976 4490 Pls
5967 4447 Pls
5957 4473 Pls
5945 4425 Pls
5931 4446 Pls
5916 4401 Pls
5899 4409 Pls
5881 4374 Pls
5861 4365 Pls
5840 4343 Pls
5816 4313 Pls
5792 4306 Pls
5766 4258 Pls
5738 4261 Pls
5709 4200 Pls
5679 4207 Pls
5647 4141 Pls
5614 4144 Pls
5579 4081 Pls
5543 4072 Pls
5506 4019 Pls
5468 3994 Pls
5428 3955 Pls
5388 3910 Pls
5346 3885 Pls
5303 3824 Pls
5259 3810 Pls
5214 3736 Pls
5168 3728 Pls
5121 3649 Pls
5073 3639 Pls
5025 3562 Pls
4975 3543 Pls
4925 3477 Pls
4874 3441 Pls
4823 3390 Pls
4771 3337 Pls
4718 3301 Pls
4665 3231 Pls
4612 3209 Pls
4558 3127 Pls
4504 3112 Pls
4449 3025 Pls
4394 3009 Pls
4339 2926 Pls
4284 2903 Pls
4229 2831 Pls
4173 2793 Pls
4118 2737 Pls
4063 2682 Pls
4008 2643 Pls
3953 2573 Pls
3898 2549 Pls
3843 2468 Pls
3789 2452 Pls
3735 2367 Pls
3682 2353 Pls
3629 2272 Pls
3576 2252 Pls
3525 2182 Pls
3473 2150 Pls
3423 2097 Pls
3373 2049 Pls
3324 2014 Pls
3275 1952 Pls
3228 1933 Pls
3181 1860 Pls
3135 1853 Pls
3091 1776 Pls
3047 1772 Pls
3004 1700 Pls
2963 1691 Pls
2922 1631 Pls
2883 1611 Pls
2845 1569 Pls
2808 1535 Pls
2773 1512 Pls
2738 1463 Pls
2705 1458 Pls
2674 1400 Pls
2644 1406 Pls
2615 1345 Pls
2588 1356 Pls
2562 1299 Pls
2538 1307 Pls
2515 1263 Pls
2494 1261 Pls
2474 1235 Pls
2456 1220 Pls
2440 1213 Pls
2425 1184 Pls
2412 1196 Pls
2401 1157 Pls
2391 1182 Pls
2383 1140 Pls
2376 1170 Pls
2371 1132 Pls
2368 1161 Pls
2367 1135 Pls
2367 1154 Pls
2369 1146 Pls
2372 1153 Pls
2378 1165 Pls
2385 1157 Pls
2393 1188 Pls
2404 1170 Pls
2415 1215 Pls
2429 1193 Pls
2444 1243 Pls
2461 1225 Pls
2480 1274 Pls
2500 1267 Pls
2521 1307 Pls
2544 1317 Pls
2569 1345 Pls
2595 1374 Pls
2623 1387 Pls
2652 1436 Pls
2682 1437 Pls
2714 1499 Pls
2747 1495 Pls
2782 1564 Pls
2818 1563 Pls
2855 1630 Pls
2894 1638 Pls
2933 1697 Pls
2974 1721 Pls
3016 1766 Pls
3059 1809 Pls
3103 1838 Pls
3148 1900 Pls
3194 1917 Pls
3241 1992 Pls
3288 2001 Pls
3337 2083 Pls
3386 2093 Pls
3436 2173 Pls
3487 2191 Pls
3539 2261 Pls
3591 2295 Pls
3643 2350 Pls
3696 2401 Pls
3750 2441 Pls
3804 2509 Pls
3858 2534 Pls
3913 2615 Pls
3968 2631 Pls
4023 2719 Pls
4078 2734 Pls
4133 2818 Pls
4188 2840 Pls
4244 2914 Pls
4299 2949 Pls
4354 3008 Pls
4409 3059 Pls
4464 3101 Pls
4518 3168 Pls
4573 3194 Pls
4627 3273 Pls
4680 3288 Pls
4733 3373 Pls
4785 3385 Pls
4837 3467 Pls
4888 3484 Pls
4939 3554 Pls
4989 3583 Pls
5038 3637 Pls
5086 3680 Pls
5134 3716 Pls
5180 3775 Pls
5226 3793 Pls
5271 3863 Pls
5315 3870 Pls
5357 3944 Pls
5399 3946 Pls
5439 4017 Pls
5478 4022 Pls
5516 4082 Pls
5553 4097 Pls
5589 4139 Pls
5623 4168 Pls
5656 4192 Pls
5687 4234 Pls
5717 4240 Pls
5746 4293 Pls
5773 4285 Pls
5571 4637 Pls
2.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
LTb
5180 4437 M
(66.9*x) Rshow
LT1
5300 4437 M
543 0 V
2367 1164 M
36 34 V
37 33 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
36 33 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
36 33 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 33 V
36 34 V
37 33 V
37 34 V
36 33 V
37 34 V
37 33 V
36 34 V
37 33 V
37 33 V
36 34 V
37 33 V
36 34 V
1.000 UP
stroke
1.000 UL
LT1
0.00 0.00 0.00 C /Helvetica findfont 200 scalefont setfont
LTb
5180 4237 M
("<echo '-0.000001 -0.0000669'") Rshow
LT1
0.00 0.00 0.00 C 2367 1164 Circle
5571 4237 Circle
1.000 UL
LTb
1460 4800 N
0 -3960 V
5440 0 V
0 3960 V
-5440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
