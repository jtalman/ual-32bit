%!PS-Adobe-2.0 EPSF-2.0
%%Title: PureBetatronMinus_BM_M1.0.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri May 30 15:41:11 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (PureBetatronMinus_BM_M1.0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (UAL User in 2011)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 30 15:41:11 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1460 840 M
5440 0 V
stroke
LTb
1460 840 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 840 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.02)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 1335 M
5440 0 V
stroke
LTb
1460 1335 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 1335 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.015)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 1830 M
5440 0 V
stroke
LTb
1460 1830 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 1830 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.01)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 2325 M
5440 0 V
stroke
LTb
1460 2325 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 2325 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.005)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 2820 M
5440 0 V
stroke
LTb
1460 2820 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 2820 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 3315 M
5440 0 V
stroke
LTb
1460 3315 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 3315 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.005)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 3810 M
5440 0 V
stroke
LTb
1460 3810 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 3810 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.01)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 4305 M
5440 0 V
stroke
LTb
1460 4305 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 4305 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.015)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 4800 M
5440 0 V
stroke
LTb
1460 4800 M
63 0 V
5377 0 R
-63 0 V
stroke
1340 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.02)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1460 840 M
0 3960 V
stroke
LTb
1460 840 M
0 63 V
0 3897 R
0 -63 V
stroke
1460 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2237 840 M
0 3497 V
0 400 R
0 63 V
stroke
LTb
2237 840 M
0 63 V
0 3897 R
0 -63 V
stroke
2237 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3014 840 M
0 3497 V
0 400 R
0 63 V
stroke
LTb
3014 840 M
0 63 V
0 3897 R
0 -63 V
stroke
3014 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3791 840 M
0 3497 V
0 400 R
0 63 V
stroke
LTb
3791 840 M
0 63 V
0 3897 R
0 -63 V
stroke
3791 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4569 840 M
0 3497 V
0 400 R
0 63 V
stroke
LTb
4569 840 M
0 63 V
0 3897 R
0 -63 V
stroke
4569 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5346 840 M
0 3497 V
0 400 R
0 63 V
stroke
LTb
5346 840 M
0 63 V
0 3897 R
0 -63 V
stroke
5346 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5e-07)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6123 840 M
0 3960 V
stroke
LTb
6123 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6123 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6900 840 M
0 3960 V
stroke
LTb
6900 840 M
0 63 V
0 3897 R
0 -63 V
stroke
6900 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.5e-06)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1460 4800 N
0 -3960 V
5440 0 V
0 3960 V
-5440 0 V
Z stroke
LCb setrgbcolor
400 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (x [m])]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4180 340 M
[ [(Symbol) 200.0 0.0 true true 0 (d)]
[(Helvetica) 160.0 -60.0 true true 0 (U)]
[(Helvetica) 160.0 -60.0 true true 0 (A)]
[(Helvetica) 160.0 -60.0 true true 0 (L)]
] -46.7 MCshow
LTb
1.000 UP
2237 1137 M
[ [(Helvetica) 200.0 0.0 true true 0 (xprime)]
[(Helvetica) 160.0 -60.0 true true 0 (0)]
[(Helvetica) 200.0 0.0 true true 0 (=-0.0004)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 200 scalefont setfont
LTb
5180 4637 M
('saveIG-BM_M1.0.RF' i 18 u 9:4) Rshow
LT0
4569 2820 Pls
4569 2481 Pls
4703 3474 Pls
4711 1881 Pls
4830 3983 Pls
4858 1493 Pls
4950 4234 Pls
5007 1403 Pls
5067 4169 Pls
5155 1630 Pls
5183 3803 Pls
5297 2122 Pls
5301 3215 Pls
5430 2768 Pls
5423 2540 Pls
5551 3427 Pls
5550 1928 Pls
5662 3952 Pls
5679 1519 Pls
5763 4227 Pls
5807 1404 Pls
5857 4189 Pls
5930 1605 Pls
5947 3845 Pls
6046 2078 Pls
6037 3271 Pls
6149 2716 Pls
6127 2598 Pls
6239 3378 Pls
6220 1977 Pls
6316 3918 Pls
6312 1548 Pls
6379 4216 Pls
6401 1406 Pls
6434 4204 Pls
6484 1583 Pls
6482 3883 Pls
6557 2035 Pls
6527 3325 Pls
6616 2664 Pls
6571 2655 Pls
6660 3328 Pls
6616 2025 Pls
6689 3881 Pls
6658 1577 Pls
6704 4201 Pls
6697 1410 Pls
6707 4214 Pls
6729 1561 Pls
6704 3918 Pls
6750 1993 Pls
6696 3376 Pls
6757 2610 Pls
6686 2711 Pls
6749 3275 Pls
6676 2074 Pls
6724 3841 Pls
6665 1607 Pls
6686 4182 Pls
6650 1415 Pls
6636 4222 Pls
6628 1540 Pls
6578 3949 Pls
6596 1951 Pls
6517 3424 Pls
6551 2556 Pls
6455 2765 Pls
6491 3221 Pls
6393 2121 Pls
6416 3798 Pls
6330 1637 Pls
6328 4160 Pls
6266 1421 Pls
6230 4225 Pls
6196 1519 Pls
6125 3977 Pls
6118 1908 Pls
6019 3470 Pls
6029 2501 Pls
5912 2818 Pls
5927 3165 Pls
5808 2168 Pls
5813 3753 Pls
5706 1667 Pls
5687 4136 Pls
5604 1426 Pls
5554 4227 Pls
5500 1498 Pls
5416 4004 Pls
5391 1865 Pls
5278 3515 Pls
5273 2445 Pls
5143 2870 Pls
5146 3107 Pls
5014 2215 Pls
5008 3707 Pls
4889 1697 Pls
4863 4110 Pls
4768 1432 Pls
4712 4227 Pls
4648 1478 Pls
4560 4029 Pls
4526 1823 Pls
4411 3559 Pls
4400 2388 Pls
4268 2922 Pls
4267 3050 Pls
4133 2261 Pls
4128 3660 Pls
4006 1727 Pls
3983 4084 Pls
3887 1438 Pls
3836 4226 Pls
3772 1458 Pls
3690 4053 Pls
3659 1780 Pls
3551 3602 Pls
3545 2332 Pls
3421 2973 Pls
3428 2992 Pls
3302 2309 Pls
3307 3612 Pls
3195 1758 Pls
3184 4057 Pls
3098 1445 Pls
3061 4225 Pls
3008 1439 Pls
2943 4077 Pls
2924 1739 Pls
2833 3646 Pls
2841 2277 Pls
2734 3026 Pls
2758 2934 Pls
2650 2357 Pls
2674 3565 Pls
2579 1791 Pls
2590 4029 Pls
2522 1455 Pls
2509 4223 Pls
2474 1422 Pls
2433 4102 Pls
2434 1699 Pls
2367 3690 Pls
2398 2223 Pls
2315 3080 Pls
2363 2878 Pls
2278 2408 Pls
2328 3518 Pls
2256 1827 Pls
2294 4002 Pls
2249 1467 Pls
2264 4222 Pls
2253 1408 Pls
2240 4126 Pls
2265 1662 Pls
2227 3735 Pls
2283 2171 Pls
2228 3135 Pls
2302 2822 Pls
2244 2461 Pls
2321 3471 Pls
2275 1865 Pls
2342 3974 Pls
2321 1483 Pls
2366 4220 Pls
2379 1398 Pls
2395 4150 Pls
2444 1628 Pls
2434 3780 Pls
2514 2121 Pls
2486 3191 Pls
2585 2768 Pls
2552 2516 Pls
2656 3424 Pls
2633 1907 Pls
2726 3946 Pls
2727 1502 Pls
2798 4216 Pls
2832 1391 Pls
2874 4173 Pls
2942 1598 Pls
2957 3825 Pls
3056 2074 Pls
3050 3248 Pls
3169 2715 Pls
3156 2573 Pls
3280 3377 Pls
3274 1953 Pls
3387 3916 Pls
3404 1526 Pls
3494 4211 Pls
3541 1389 Pls
3601 4194 Pls
3682 1571 Pls
3713 3868 Pls
3824 2029 Pls
3832 3305 Pls
3962 2662 Pls
3961 2632 Pls
4095 3330 Pls
4099 2001 Pls
4223 3884 Pls
4245 1554 Pls
4345 4202 Pls
4396 1391 Pls
4465 4212 Pls
4549 1548 Pls
4586 3910 Pls
4698 1987 Pls
4711 3362 Pls
4842 2611 Pls
4842 2692 Pls
4977 3281 Pls
4979 2051 Pls
5103 3850 Pls
5121 1585 Pls
5220 4191 Pls
5265 1397 Pls
5331 4227 Pls
5407 1528 Pls
5440 3948 Pls
5544 1947 Pls
5550 3416 Pls
5671 2560 Pls
5662 2751 Pls
5787 3232 Pls
5777 2103 Pls
5891 3813 Pls
5895 1618 Pls
5983 4175 Pls
6011 1405 Pls
6066 4237 Pls
6124 1510 Pls
6144 3983 Pls
6229 1908 Pls
6219 3468 Pls
6322 2509 Pls
6295 2809 Pls
6401 3180 Pls
6371 2155 Pls
6465 3773 Pls
6447 1653 Pls
6516 4156 Pls
6520 1416 Pls
6556 4243 Pls
6588 1495 Pls
6588 4014 Pls
6646 1870 Pls
6615 3518 Pls
6692 2458 Pls
6641 2866 Pls
6722 3127 Pls
6667 2207 Pls
6737 3730 Pls
6691 1689 Pls
6736 4133 Pls
6712 1428 Pls
6724 4245 Pls
6727 1480 Pls
6702 4041 Pls
6732 1833 Pls
6676 3564 Pls
6725 2406 Pls
6648 2922 Pls
6702 3072 Pls
6619 2259 Pls
6663 3684 Pls
6589 1725 Pls
6610 4106 Pls
6557 1441 Pls
6545 4244 Pls
6519 1467 Pls
6471 4065 Pls
6473 1796 Pls
6393 3608 Pls
6415 2354 Pls
6314 2975 Pls
6343 3016 Pls
6235 2309 Pls
6256 3636 Pls
6157 1761 Pls
6157 4077 Pls
6079 1453 Pls
6047 4239 Pls
5997 1453 Pls
5930 4086 Pls
5908 1759 Pls
5810 3649 Pls
5810 2301 Pls
5691 3027 Pls
5701 2958 Pls
5575 2359 Pls
5580 3586 Pls
5462 1797 Pls
5447 4046 Pls
5351 1466 Pls
5307 4233 Pls
5240 1439 Pls
5162 4105 Pls
5126 1721 Pls
5018 3689 Pls
5005 2247 Pls
4876 3078 Pls
4876 2900 Pls
4741 2408 Pls
4738 3536 Pls
4612 1832 Pls
4592 4013 Pls
4488 1479 Pls
4441 4225 Pls
4367 1426 Pls
4289 4123 Pls
4247 1684 Pls
4139 3728 Pls
4124 2194 Pls
3996 3128 Pls
3996 2841 Pls
3862 2458 Pls
3862 3484 Pls
3738 1869 Pls
3724 3979 Pls
3623 1493 Pls
3584 4216 Pls
3514 1414 Pls
3445 4141 Pls
3408 1647 Pls
3311 3767 Pls
3304 2140 Pls
3187 3179 Pls
3197 2783 Pls
3075 2508 Pls
3089 3433 Pls
2976 1906 Pls
2978 3946 Pls
2889 1508 Pls
2868 4208 Pls
2811 1403 Pls
2761 4158 Pls
2739 1612 Pls
2662 3807 Pls
2671 2088 Pls
2575 3231 Pls
2604 2725 Pls
2502 2560 Pls
2537 3381 Pls
2444 1945 Pls
2470 3912 Pls
2400 1526 Pls
2404 4199 Pls
2368 1394 Pls
2344 4176 Pls
2344 1579 Pls
2293 3847 Pls
2325 2038 Pls
2255 3284 Pls
2309 2668 Pls
2232 2613 Pls
2293 3330 Pls
2225 1987 Pls
2278 3878 Pls
2233 1546 Pls
2266 4189 Pls
2253 1389 Pls
2259 4193 Pls
2283 1549 Pls
2262 3887 Pls
2318 1990 Pls
2277 3338 Pls
2356 2613 Pls
2307 2669 Pls
2395 3280 Pls
2352 2032 Pls
2434 3844 Pls
2413 1570 Pls
2474 4179 Pls
2485 1387 Pls
2519 4210 Pls
2566 1522 Pls
2572 3927 Pls
2652 1944 Pls
2637 3392 Pls
2739 2559 Pls
2714 2727 Pls
2826 3230 Pls
2806 2080 Pls
2912 3809 Pls
2911 1598 Pls
2997 4168 Pls
3026 1390 Pls
3084 4225 Pls
3149 1500 Pls
3177 3966 Pls
3274 1902 Pls
3279 3447 Pls
3399 2507 Pls
3391 2786 Pls
3520 3180 Pls
3516 2131 Pls
3638 3773 Pls
3650 1630 Pls
3753 4154 Pls
3793 1396 Pls
3866 4237 Pls
3940 1481 Pls
3982 4003 Pls
4088 1862 Pls
4104 3501 Pls
4232 2456 Pls
4233 2845 Pls
4370 3130 Pls
4371 2184 Pls
4500 3735 Pls
4516 1666 Pls
4625 4138 Pls
4666 1407 Pls
4745 4247 Pls
4818 1465 Pls
4863 4037 Pls
4967 1825 Pls
4984 3554 Pls
5109 2406 Pls
5109 2905 Pls
5242 3079 Pls
5239 2238 Pls
5365 3695 Pls
5373 1704 Pls
5478 4118 Pls
5510 1421 Pls
5583 4253 Pls
5645 1453 Pls
5683 4068 Pls
5774 1791 Pls
5782 3604 Pls
5894 2357 Pls
5882 2964 Pls
6002 3027 Pls
5985 2294 Pls
6097 3652 Pls
6089 1744 Pls
6179 4094 Pls
6192 1438 Pls
6251 4254 Pls
6292 1444 Pls
6315 4095 Pls
6384 1758 Pls
6375 3651 Pls
6465 2309 Pls
6434 3022 Pls
6532 2974 Pls
6493 2349 Pls
6584 3607 Pls
6552 1785 Pls
6621 4067 Pls
6609 1457 Pls
6646 4252 Pls
6660 1436 Pls
6661 4118 Pls
6703 1726 Pls
6671 3695 Pls
6734 2260 Pls
6678 3077 Pls
6750 2920 Pls
6684 2404 Pls
6750 3559 Pls
6690 1827 Pls
6735 4036 Pls
6693 1476 Pls
6706 4245 Pls
6691 1429 Pls
6668 4137 Pls
6680 1694 Pls
6624 3736 Pls
6658 2211 Pls
6577 3130 Pls
6621 2864 Pls
6529 2457 Pls
6569 3509 Pls
6482 1868 Pls
6502 4002 Pls
6433 1496 Pls
6423 4235 Pls
6380 1423 Pls
6334 4153 Pls
6320 1663 Pls
6241 3774 Pls
6249 2162 Pls
6146 3182 Pls
6167 2807 Pls
6052 2509 Pls
6070 3456 Pls
5960 1909 Pls
5960 3966 Pls
5868 1516 Pls
5840 4222 Pls
5775 1417 Pls
5713 4167 Pls
5677 1632 Pls
5582 3810 Pls
5572 2112 Pls
5453 3231 Pls
5571 4637 Pls
2.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
LTb
5180 4437 M
(66.9*x) Rshow
LT1
5300 4437 M
543 0 V
2225 2810 M
46 0 V
46 0 V
46 1 V
45 0 V
46 0 V
46 0 V
46 0 V
45 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
46 0 V
46 1 V
45 0 V
46 0 V
46 0 V
46 0 V
46 1 V
45 0 V
46 0 V
46 0 V
46 0 V
45 1 V
46 0 V
46 0 V
46 0 V
46 0 V
45 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
46 0 V
46 1 V
45 0 V
46 0 V
46 0 V
46 0 V
46 1 V
45 0 V
46 0 V
46 0 V
46 0 V
45 1 V
46 0 V
46 0 V
46 0 V
46 0 V
45 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
46 0 V
45 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
46 1 V
46 0 V
46 0 V
45 0 V
46 0 V
stroke
1.000 UL
LTb
1460 4800 N
0 -3960 V
5440 0 V
0 3960 V
-5440 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
