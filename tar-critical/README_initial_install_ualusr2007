Mon Dec 17 2021
Wed Dec 22 2021
Thu Dec 23 2021
Tue Dec 28 2021
Wed Dec 29 2021
Thu Dec 30 2021
Sat Mar 12 2022
Thu Mar 24 2022
Mon Jun 17 2024
Tue Jun 18 2024
Wed Jun 19 2024
Fri Jun 21 2024
_____________________________________________________________________________
PREAMBLE
_____________________________________________________________________________

This recipe is for a user, "ualusr2007" using tcsh shell, on a "32 bit box".

OS Scientific Linux 6.10 is normalized to for the time being.

The contents of directory
      ~/tar-critical/
are assumed available

They are cloned/downloaded into
      ~/ualusr2007/ual-32bit/tar-critical/
or such from "GIT" first,
      git clone https://github.com/jtalman/ual-32bit
and then explicitly copied/moved there:
      cp ~/ual-32bit/tar-critical/QT.tar    ~/tar-critical/QT.tar
      cp ~/ual-32bit/tar-critical/ROOT.tar  ~/tar-critical/ROOT.tar
      ...

This tortured syntax will hopefully be improved at some point.

This README file, README_initial_install_ualusr2007, is on the web as
--->>>      https://github.com/jtalman/ualusr2007/tar-critical/README_initial_install_ualusr2007   <<<---
Specific directions follow...

Again, this "recipe" should be implemented on a Scientific Linux 6.10, 32 bit, box.

We've tended to start from configuration
      "Web Development Workstation"
on a SL6.10 install disk(s),
          SL-610-i386-2018-07-03
and then add every package that looks like it's associated with robust software
development:
        DATE        # Packages              TYPE
      6/16/2024       1554           Pure Web Development Workstation (Customize Later)

      6/17/2024       1634           Web Development Workstation (Customize Now)
            Yum Repositories
            Hardware Monitoring utilities
            Compatibility Libraries
            Performance tools
            Scientific Support
            Security tools
            System administration tools
            TEX support
            Technical writing
            Office suite and Productivity

Compilers gcc and g++ are the most direct requirements, but there are many others
(make...)!

Terminology used here is that this freshly set up, pristine box, is a
      "new box"
This state has the lead stanza in the recipe.

In practice, the names involved here,
            tar-critical
            ual-32bit
aren't likely to collide with already present names. Thus, one can clone the bits
onto a non pristine box. Then build them according the second stanza. This while
managing
            ~/.tcshrc
themselves.

Stylistically, I (JDT), favor a dedicated gui box, installed on a pristine box.

Once the "RECIPE's" first stanza below has been executed, the box is a
      "working box"
This state has all the rest of the stanzas in the recipe, starting from the second.

File
      ~/tar-critical/tcshrcForWorkingBox
becomes the tcsh run command/control file for ualusr2007
      ~/.tcshrc

Our philosophy is
      "GIT controls most of the relevant environment"
The user is cautioned against modifying this environment.

Thus the user, called ualusr2007, is intended to continue in the "working box"
state.

Again, both of these states, "new box", and "working box", are likely to be malleable/mutable in practice
as the user becomes fluent.

_____________________________________________________________________________
RECIPE
_____________________________________________________________________________

BEGIN FIRST STANZA:
For new box:
   Login as ualusr2007

   Launch New Terminal:
      cd
      git clone https://github.com/jtalman/ual-32bit

   Copy directory ~/ualusr2007/tar-critical to ~/tar-critical
      cp ~/tar-critical/tcshrcForNewBox ~/.tcshrc
      exit

   Launch New Terminal:
      cd
      ... "look around", "back up"...

      setenv UALUSR `pwd`

      \rm -rf USPAS
      mkdir   USPAS
      mkdir   USPAS/tools
      setenv  USPAS  $UALUSR/USPAS

:     cp ~/tar-critical/ual1.tar  $USPAS
      cd $USPAS
      git clone https://github.com/jtalman/ual1

:     cd $USPAS
:     tar xvf ual1.tar

      cp ~/tar-critical/tcshrcForWorkingBox ~/.tcshrc

      exit
  (This is now a "working box")
END FIRST STANZA:
BEGIN SECOND STANZA:

   For working box:
: (Launch New Terminal) probably already done
   Launch New Terminal

      cd $USPAS/tools/
      \cp ~/tar-critical/qt.tar .
      : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/qt.tar .
      \rm -rf qt
      tar xvf qt.tar
      cd qt
      ./configure --thread -no-xft -qt-gif --no-exceptions
            yes

(libXmu)?
      The goal is this file structure:
            [root@T530-4 lib]# ll libXmu.so*
                  lrwxrwxrwx. 1 root root     15 Dec 24 06:39 libXmu.so -> libXmu.so.6.2.0
                  lrwxrwxrwx. 1 root root     15 Dec 24  2021 libXmu.so.6 -> libXmu.so.6.2.0
                  lrwxrwxrwx. 1 root root     15 Dec 24 06:40 libXmu.so.6.2 -> libXmu.so.6.2.0
                  -rwxr-xr-x. 1 root root 100344 Feb 22  2013 libXmu.so.6.2.0

      Commands such as:
            pushd /usr/lib/
            su
            ln -s libXmu.so.6.2.0 libXmu.so.6.2
            ...
            [root@T530-4 lib]# exit
            popd
      might be necessary.

      make >& make.log
        :     (spot check)
      ll lib/libqt-mt.so.3.3.4
        :    8141331 this is with gcc34
        :    8338158 this is with gcc44

-----------------------------------------------------------------------
      pushd /usr/lib/
      su
(libXpm.so)?
      The goal is this file structure:
            [root@T530-4 lib]# ll libXpm.so*
                  lrwxrwxrwx. 1 root root    16 Dec 24 06:54 libXpm.so -> libXpm.so.4.11.0
                  lrwxrwxrwx. 1 root root    16 Dec 24  2021 libXpm.so.4 -> libXpm.so.4.11.0
                  lrwxrwxrwx. 1 root root    16 Dec 24 06:54 libXpm.so.4.11 -> libXpm.so.4.11.0
                  -rwxr-xr-x. 1 root root 69444 Feb 22  2013 libXpm.so.4.11.0

      Commands such as:
            pushd /usr/lib/
            su
            (ln -s /usr/lib/libXpm.so.4.11.0 /usr/lib/libXpm.so)?    T530-4 SL6.5
            (ln -s /usr/lib/libXpm.so.6* /usr/lib/libXpm.so)?        T530-3 SL6.10
            [root@T530-4 lib]# exit
            popd
      might be necessary.

  cd $USPAS/tools/
  \cp ~/tar-critical/root.tar.gz .
  : \cp ~/tar-critical/root.tar .
  : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/root.tar .
  \rm -rf ./root
  tar xvfz root.tar.gz
  cd root
  ./configure --enable-soversion --enable-qt --enable-table --disable-ldap --with-qt-incdir=$USPAS/tools/qt/include/ --with-qt-libdir=$USPAS/tools/qt/lib/

  make all >& make.log            ??
  make all >&! make.log           ??

  ll lib/libCore.so*
        : 12      lib/libCore.so -> libCore.so.4
        : 15      lib/libCore.so.4 -> libCore.so.4.04
        : 8503578 lib/libCore.so.4.04
        : 8503642 lib/libCore.so.4.04

-----------------------------------------------------------------------
VIMP!!!
  ll lib/libGQt.so*
        : 18      lib/libGQt.so -> libGQt.so.4.04
        : 18      lib/libGQt.so.4 -> libGQt.so.4.04
        : 1041782 lib/libGQt.so.4.04 
VIMP!!!

This next stanza may or may not be necessary.

Again, having this "root - qt library" is VIMP!!
-----------------------------------------------------------------------

-----------------------------------------------------------------------
???????????????????????????????????????????????????????????????????????
This stanza may or may not be necessary.

: \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/libGQt.so.4.04 lib
  \cp ~/tar-critical/libGQt.so.4.04 lib
  ln -s lib/libGQt.so.4.04 lib/libGQt.so.4
  ln -s lib/libGQt.so.4.04 lib/libGQt.so

???????????????????????????????????????????????????????????????????????
-----------------------------------------------------------------------

   cd $USPAS
    : \cp ~/tar-critical/ual1.tar .
    : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/libGQt.so.4.04 lib
    : \rm -rf ual1
    : tar xvf ual1.tar 
       : bug in setup-ual-env 
       :       XERCESCROOT $UAL/tools/tars/xerces-c-src_2_6_0  ->
       :       XERCESCROOT $UAL/tools/tars/xerces-c-src_2_7_0
   cd $UAL
   make clean
   make >& make.log    
   ll codes/UAL/lib/linux/libUal.so
        : 643612

   cd $UAL/gui
   \cp ~/tar-critical/QT.tar .
   : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/QT.tar .
   \rm -rf QT
   tar xvf QT.tar
   cd QT
   make clean
   make >& make.log
   ll lib/linux/libUalQt.so
        : 2607521
        : 2607541
        : 2607117

   cd $UAL/gui
   \cp ~/tar-critical/ROOT.tar .
   : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/ROOT.tar .
   \rm -rf ROOT
   tar xvf ROOT.tar
   cd ROOT
   make clean
   make >& make.log
   ll lib/linux/libUalRootViewers.so
        : 3702843
        : 3646685
        : 3646117

   cd $USPAS
   \cp ~/tar-critical/examples.tar .
   : \cp /media/RT-Jan2021/home/ualusr2007/tar-critical/examples.tar .
   \rm -rf examples
   tar xvf examples.tar

   cd $USPAS
   cd examples/player
   make clean
   make
        :          (ignore failed run build)
   ll lib/linux/libUspasPlayer.so
        : 464997
        : 460584

   cd $USPAS
   cd examples/longitudinal
   make clean
   make
   : cd lib/linux
   cd lib
   setenv LD_PRELOAD /home/ualusr2007/USPAS/tools/qt/lib/libqt-mt.so.3.3.4
   setenv LD_LIBRARY_PATH /home/ualusr2007/USPAS/tools/qt/lib/:$LD_LIBRARY_PATH
   setenv LD_LIBRARY_PATH /home/ualusr2007/USPAS/tools/root/lib/:$LD_LIBRARY_PATH

   chmod a+x linux/run

   ./linux/run ring ../../lattices/eq_tune_fodo.adxf ../apdf/tibetan.apdf
   : ./linux/run ring ../sxf/CLS.sxf ../apdf/tibetan.apdf
   : ./run ring ../../../lattices/eq_tune_fodo.sxf ../apdf/tibetan.apdf
END SECOND STANZA:
